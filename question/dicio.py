DESCRIPTION = {
    1401: [
        ("Descrição", ['''Gerar permutações sempre foi um problema importante na ciência da computação. Neste problema, você terá de gerar todas as permutações de uma dada string, em ordem lexicográfica crescente. Lembre-se que seu algoritmo deve ser eficiente.''']),
        ("Entrada", ['''A primeira linha da entrada contém um inteiro n, indicando o número de strings que seguem. As próximas n linhas contém uma string cada. Cada string conterá apenas caracteres alfanuméricos, e nunca conterá espaços. O tamanho máximo de uma string é 10.''']),
        ("Saida", ['''Para cada string da entrada, imprima todas as permutações possíveis da string, em ordem lexicográfica crescente. Note que as strings devem ser tratas como Case Sensitive (isto é, letras maiúsculas são diferentes das minúsculas). Além disso, nenhuma permutação deve ser impressa mais de uma vez. Uma linha em branco deve ser impressa após cada lista de permutações.'''])
        ],
    
    1250:[
        ("Descrição", ['''Você chegou a um dos últimos chefões no novo jogo de ação 2-D de deslocamento lateral, KiloMan. O chefão tem uma arma grande que pode atirar projéteis em várias alturas. Para cada tiro, KiloMan pode ficar parado ou pular. Se ele ficar parado e o tiro estiver na altura 1 ou 2, ele será atingido. Se ele pular e o tiro estiver a uma altura maior que 2, então ele também será atingido. Caso contrário, ele não é atingido. Dada a altura de cada tiro e a sequência de pulos, quantas vezes KiloMan será atingido?''']),
        ("Entrada", ['''A entrada contém vários casos de teste. A primeira linha da entrada contém um inteiro N que indica o número de casos de teste. Cada caso de teste é composto por 3 linhas. A primeira linha contém um inteiro T (1 ≤ T ≤ 50) que indica o número de tiros. A segunda linha contém T inteiros, que representam a sequência das alturas às quais os tiros estão sendo disparados. Cada elemento da sequência será entre 1 e 7, inclusive. A terceira linha da entrada contém a string "pulos", que representa a sequência de pulos que KiloMan tentará; 'J' significa que ele irá pular e 'S' significa que ele ficará parado. Por exemplo, se o primeiro número da sequência de tiros for 3 e o primeiro caractere de "pulos" for 'J', então KiloMan pulará assim que o chefão atirar a uma altura 3 (e, portanto, ele será atingido).''']),
        ("Saída", ['''Para cada caso, seu programa deve imprimir um inteiro representando o número de vezes que KiloMan é atingido.'''])
        ],

    2484:[
        ("Descrição", ['''No século XXII, uma doença devastadora atingiu mais da metade da população mundial. O governo está desesperado em busca de uma cura, pois há um grande risco de que a doença dizime toda a população. Os hospitais estão lotados e a aflição no olhar das pessoas é notável.\nNesta época, poucas pessoas têm acesso livre à internet, mas você é uma delas. Ao vasculhar a rede, você encontrou alguns textos dispersos sobre um amuleto de uma palavra mágica escrita em forma de um triângulo que cura doenças letais. Incrédulo mas esperançoso, você se lembrou de que a biblioteca do Sr. Severino tinha um livro um tanto inusitado, com a seguinte capa:''', "<img>", ''' \nEntão, você foi imediatamente à biblioteca. Chegando lá, ao ler somente o prefácio do livro, já confirmou tudo o que viu sobre os amuletos na rede, e em seguida, deu a si mesmo uma missão: espalhar palavras mágicas na rede em forma de um triângulo a fim de alertar as pessoas de que pode haver uma cura para a doença. Por consequência, se forem construídos amuletos em massa com palavras mágicas e estes forem entregues às pessoas, a doença pode ser aniquilada e a população, salva.\nPara completar tal missão, você deverá começar pelo passo mais simples: escrever um programa que receba uma palavra e a transforme em um triângulo, tal como na capa do livro.''']),
        ("Entrada", ['''A entrada contém vários casos de teste. Cada caso de teste é composto por uma palavra de 2 até 100 caracteres e sem espaços. A entrada termina com EOF (fim de arquivo).''']),
        ("Saída", ['''Para cada caso de teste, imprima a palavra recebida em forma de um triângulo e lembre-se de deixar um espaço em branco entre cada letra, mas não deixe espaço em branco após a última letra de cada linha. Imprima uma linha em branco após cada caso de teste, inclusive após o último.'''])
        ],

    2974:[
        ("Descrição", ['''Em um porão escuro, há uma caixa de madeira com soluções impressas para todas as tarefas deste concurso. No entanto, o porão tem paredes grossas e uma porta, e uma fechadura na porta. Na fechadura existem n barras de ferro horizontais e em cada uma das barras há uma palavra com letras de igual largura. Cada barra pode ser movida independentemente para a esquerda ou direita para uma ou mais larguras de uma letra. Há pelo menos uma letra que é comum a todas as palavras. Portanto, as barras podem ser alinhadas de modo que haja uma linha vertical de n letras idênticas acima uma da outra (cada letra em uma barra). Para destrancar a porta, as barras devem ser posicionadas de tal forma que haja um número máximo de linhas verticais consecutivas.''','''Você está naturalmente interessado em escrever um programa que resolva esse problema.''']),
        ("Entrada", ['''A primeira linha contém um inteiro n, o número de barras, com n <= 1000. Em cada uma das próximas n linhas, há uma palavra correspondente a uma das barras. As palavras contém somente letras maiúsculas, e possuem no mínimo 1 e no máximo 100 caracteres.''']),
        ("Saída", ['''Uma string de comprimento máximo, que aparece em cada palavra como uma sequência de letras consecutivas. Se houver mais de uma solução, você deverá imprimir a mais à esquerda.'''])
        ],
    
    2544:[
        ("Descrição", ['''O Kage Bunshin no Jutsu (ou a "técnica dos clones de sombra", para os lusofalantes) é uma técnica milenar bastante utilizada em batalhas ninja.\n Quando utilizada, a técnica cria uma cópia idêntica de seu usuário. Desta forma, se um dado ninja usa a técnica, passam a existir dois destes ninjas (o original e a cópia).\n A técnica sempre é executada por todos os ninjas existentes no momento. Desta forma, se a técnica for utilizada novamente, passam a existir quatro ninjas idênticos ao original (os dois anteriores e mais duas cópias), e assim por diante.\n Há N cópias de um dado ninja (incluindo o original). Sua tarefa é determinar quantas vezes a técnica foi utilizada.\n''']),
        ("Entrada", ['''A entrada contém vários casos de teste. Cada caso contém uma linha com o número N (1 ≤ N ≤ 106). É garantido que o valor de N é tal que é possível obter exatamente N cópias de um ninja utilizando a técnica (incluindo o original).\n A entrada termina com fim-de-arquivo (EOF).''']),
        ("Saída", ['''Para cada caso de teste, imprima uma linha contendo o número de vezes que a técnica foi utilizada.'''])
        ],
    
    2693:[
        ("Descrição", ['''Depois de um belo dia de aula é função das vans levarem os estudantes para suas respectivas casas. Mas o que muitos não sabem é que além dos gastos e manutenção da van o motorista precisa ter uma rota para entregar os passageiros em suas casas. Como você é o menino(a) da informática, ele pediu sua ajuda para desenvolver essa rota ordenando os alunos pela distância(da menor para a maior), pela região (em ordem alfabética) e por último pelo nome. ''']),
        ("Entrada", ['''Ele te dá a quantidade Q de alunos que não faltaram, o nome do aluno A e uma sigla para a região onde ele mora S ("L" Leste, "N" Norte, "O" Oeste, "S" Sul), e C que representa o custo da entrada da cidade até sua casa. A saída dos casos será (EOF).''']),
        ("Saída", ['''A saída será uma lista das pessoas na ordem em que devem ser entregadas.'''])
        ],

    2496:[
        ("Descrição", ['''Todo mundo sabe que as decisões que são tomadas fazem toda a diferença no resultado obtido. Um exemplo bastante conhecido é o paradoxo de Monty Hall, que é composto por três etapas e, na terceira, o concorrente dá a cartada final e, dependendo da sua escolha, pode ou não ganhar um carro.\n Você deseja obter um “Accepted” e, para isso, terá que escrever um programa que verifique se uma única troca de posição entre duas letras resultará em uma sequência ordenada. Considere as seguintes sequências:\n ABCDFGHIEJ\n ABCDEFGHJIKLMNO\n Para que a primeira sequência seja ordenada, é necessário mais de uma troca entre a posição das letras. Na segunda, por outro lado, basta que o I e o J mudem de posição. Sua missão é verificar se para cada sequência recebida existe uma única troca entre duas letras que a faça ordenada.''']),
        ("Entrada", ['''A entrada é composta por um inteiro N, que representa a quantidade de casos de teste (1 <= N <= 100). Cada caso de teste é composto por um inteiro M, que representa a quantidade de letras de uma sequência (2 <= M <= 26) e por uma sequência alfabética composta por M letras. As letras são sempre maiúsculas e não se encontram em um índice superir a M. Caso M seja 4, as únicas letras possíveis para a sequência são: A, B, C ou D, em qualquer ordem.''']),
        ("Saída", ['''Para cada sequência informada, o programa deve retornar uma única linha que apresentará “There are the chance.” se a sequência obedecer a regra de ordenação mencionada, ou “There aren't the chance.” caso contrário.'''])
        ],
    
    2460:[
        ("Descrição", ['''Com a proximidade da Copa do Mundo, o fluxo de pessoas nas filas para compra de ingressos aumentou consideravelmente. Como as filas estão cada vez maiores, pessoas menos pacientes tendem a desistir da compra de ingressos e acabam deixando as filas, liberando assim vaga para outras pessoas. Quando uma pessoa deixa a fila, todas as pessoas que estavam atrás dela dão um passo a frente, sendo assim nunca existe um espaço vago entre duas pessoas. A fila inicialmente contém N pessoas, cada uma com um identificador diferente. Joãozinho sabe o estado inicial dela e os identificadores em ordem das pessoas que deixaram a fila. Sabendo que após o estado inicial nenhuma pessoa entrou mais na fila, Joãozinho deseja saber o estado final da fila.''']),
        ("Entrada", ['''A primeira linha contém um inteiro N (1 ≤ N ≤ 50000) representando a quantidade de pessoas inicialmente na fila. A segunda linha contém N inteiros representando os identificadores das pessoas na fila. O primeiro identificador corresponde ao identificador da primeira pessoa na fila. É garantido que duas pessoas diferentes não possuem o mesmo identificador. A terceira linha contém um inteiro M (1 ≤ M ≤ 50000 e M < N) representando a quantidade de pessoas que deixaram a fila. A quarta linha contém M inteiros representando os identificadores das pessoas que deixaram a fila (cada identificador está entre 1 e 100000), na ordem em que elas saíram. É garantido que um mesmo identificador não aparece duas vezes nessa lista.''']),
        ("Saída", ['''Seu programa deve imprimir uma linha contedo N − M inteiros com os identificadores das pessoas que permaneceram na fila, em ordem de chegada.'''])
        ],
    
    2343:[
        ("Descrição", ['''Jorge é um apresentador de televisão que comanda a versão brasileira do grande sucesso Caçadores de Mitos, onde se estuda um mito para descobrir se é fato ou apenas um boato.\n No próximo episódio, Jorge deverá apresentar o mito que diz que ”os raios não caem duas vezes no mesmo lugar”, referindo-se aos raios das tempestades de chuva.\n Para isso, foi até a cidade de Eletrolândia, que é a cidade com maior ocorrência de raios no mundo. O prefeito tem tanto orgulho desse título que mandou criar um sistema para registrar os raios. Jorge conseguiu um relatório com as ocorrências de cada raio que caiu na cidade nos últimos anos.\n O mapa de Eletrolândia é um retângulo. Para o sistema de registro a cidade é subdividida em quadrados de um metro de lado, denominados quadrantes. Assim, se a cidade tem 300 metros de largura e 1000 de comprimento, ela será subdividida em 300.000 quadrantes. O sistema de registro armazena o quadrante em que o raio caiu. Cada quadrante é identificado pelas suas coordenadas X e Y, conforme ilustra a figura abaixo, que exemplifica um mapa de uma cidade com oito metros de comprimento por cinco metros de largura (quarenta quadrantes).''', "<img>", '''Como os quadrantes são relativamente pequenos, Jorge decidiu que se dois raios caíram no mesmo quadrante, pode-se considerar que caíram no mesmo lugar.\n Sua missão é escrever um programa que receba as coordenadas dos raios que caíram em Eletrolândia nos últimos anos e determine se o mito estudado é realmente apenas um mito ou pode ser considerado verdade.\n''']),
        ("Entrada", ['''A entrada contém um único conjunto de testes, que deve ser lido do dispositivo de entrada padrão (normalmente o teclado).\n A primeira linha da entrada contém um número inteiro N (2 ≤ N ≤ 500.000) representando o número de registros de raios no relatório. Cada uma das N linhas seguintes contém 2 números inteiros X, Y (0 ≤ X, Y ≤ 500), representando o registro de um raio que caiu no quadrante cujas coordenadas são (X, Y).''']),
        ("Saída", ['''Seu programa deve imprimir, na saída padrão, o número 0 se nenhum raio caiu no mesmo lugar, ou o número 1 caso contrário. Note que você deve imprimir o número 1 mesmo que haja mais do que 1 par de raios que caíram no mesmo lugar.'''])
        ],
    
    2310:[
        ("Descrição", ['''Em um porão escuro, há uma caixa de madeira com soluções impressas para todas as tarefas deste concurso. No entanto, o porão tem paredes grossas e uma porta, e uma fechadura na porta. Na fechadura existem n barras de ferro horizontais e em cada uma das barras há uma palavra com letras de igual largura. Cada barra pode ser movida independentemente para a esquerda ou direita para uma ou mais larguras de uma letra. Há pelo menos uma letra que é comum a todas as palavras. Portanto, as barras podem ser alinhadas de modo que haja uma linha vertical de n letras idênticas acima uma da outra (cada letra em uma barra). Para destrancar a porta, as barras devem ser posicionadas de tal forma que haja um número máximo de linhas verticais consecutivas.''','''Você está naturalmente interessado em escrever um programa que resolva esse problema.''']),
        ("Entrada", ['''A primeira linha contém um inteiro n, o número de barras, com n <= 1000. Em cada uma das próximas n linhas, há uma palavra correspondente a uma das barras. As palavras contém somente letras maiúsculas, e possuem no mínimo 1 e no máximo 100 caracteres.''']),
        ("Saída", ['''Uma string de comprimento máximo, que aparece em cada palavra como uma sequência de letras consecutivas. Se houver mais de uma solução, você deverá imprimir a mais à esquerda.'''])
        ],
    
    2161:[
        ("Descrição", ['''Uma das formas de calcular a raiz quadrada de um número natural é pelo método das frações periódicas continuadas. Esse método usa como denominador uma repetição de frações. Essa repetição pode ser feita uma quantidade específica de vezes.\n Por exemplo, ao repetir 2 vezes a fração continuada para calcular a raiz quadrada de 10, temos a fórmula abaixo.''', "<img>", '''Sua tarefa é, dado o número N de repetições, calcular o valor aproximado da raiz quadrada de 10.''']),
        ("Entrada", ['''A entrada é um número natural N (0 ≤ N ≤ 100), que indica o número de repetições do denominador na fração continuada.''']),
        ("Saída", ['''A saída é o valor aproximado da raiz quadrada com 10 casas decimais.'''])
        ],
    
    2162:[
        ("Descrição", ['''Ao observar a paisagem da Nlogônia, o professor MC percebeu que a cada intervalo de 100 metros existe um pico. E que exatamente na metade de dois picos há um vale. Logo, a cada 50 metros há um vale ou um pico e, ao longo da paisagem, não há um pico seguido por outro pico, nem um vale seguido por outro vale.\n O professor MC ficou curioso com esse padrão e quer saber se, ao medir outras paisagens, isso se repete. Sua tarefa é, dada uma paisagem, indicar se ela possui esse padrão ou não.''']),
        ("Entrada", ['''A entrada é dada em duas linhas. A primeira tem o número N de medidas da paisagem (1 < N ≤ 100). A segunda linha tem N inteiros: a altura Hi de cada medida (-10000 ≤ Hi ≤ 10000, para todo Hi, tal que 1 ≤ i ≤ N). Uma medida é considerada um pico se é maior que a medida anterior. Uma medida é considerada um vale se é menor que a medida anterior.''']),
        ("Saída", ['''A saída é dada em uma única linha. Caso a paisagem tenha o mesmo padrão da Nlogônia, deve ser mostrado o número 1. Caso contrário, mostra-se o número 0.'''])
        ],
}